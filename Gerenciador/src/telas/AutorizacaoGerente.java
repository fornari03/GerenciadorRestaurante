package telas;

import classes.Controle;
import classes.Funcionario;
import classes.Gerente;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * Classe para a tela de autorização do gerente
 */
public class AutorizacaoGerente extends javax.swing.JFrame {

    /** Atributo para verificar se quer fechar o sistema*/
    private boolean fechar = false;
    
    /** Atributo para verificar se quer editar o cardápio */
    private boolean editarCardapio = false;
    
    /** Atributo para verificar se quer cadastrar um funcionário */
    private boolean cadastrarFuncionario = false;
    
    /** Atributo para verificar se quer abrir o relatório de funcionários */
    private boolean relatorioFuncionarios = false;
    
    /**
     * Creates new form AutorizacaoGerente
     */
    
    /**
     * Método construtor da classe
     * @param acao Ação desejada caso o login do gerente esteja correto
     */
    public AutorizacaoGerente(int acao) {
        initComponents();
        this.ftxtUsuario.requestFocus();
        switch (acao) {
            case 0:
                fechar = true;
                break;
                
            case 1:
                editarCardapio = true;
                break;
                
            case 2:
                cadastrarFuncionario = true;
                break;
                
            case 3:
                relatorioFuncionarios = true;
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsuario = new javax.swing.JLabel();
        lblSenha = new javax.swing.JLabel();
        lblAvisoAutorizacao = new javax.swing.JLabel();
        ptxtSenha = new javax.swing.JPasswordField();
        btnConfirmar = new javax.swing.JButton();
        lblImagemGerente = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();
        ftxtUsuario = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Autorização necessária");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/ops.png")).getImage());

        lblUsuario.setText("Usuário:");
        lblUsuario.setToolTipText("");

        lblSenha.setText("Senha:");

        lblAvisoAutorizacao.setFont(new java.awt.Font("Nirmala UI", 0, 18)); // NOI18N
        lblAvisoAutorizacao.setText("Para realizar tal operação, é necessária autenticação do gerente:");

        ptxtSenha.setToolTipText("Insira a senha do gerente");
        ptxtSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ptxtSenhaKeyPressed(evt);
            }
        });

        btnConfirmar.setText("Confirmar");
        btnConfirmar.setToolTipText("Confirmar dados do gerente");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        lblImagemGerente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/manager_icon_129392.png"))); // NOI18N

        btnVoltar.setBackground(new java.awt.Color(242, 242, 242));
        btnVoltar.setForeground(new java.awt.Color(242, 242, 242));
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/3643764-back-backward-left-reply-turn_113415 (1).png"))); // NOI18N
        btnVoltar.setBorder(null);

        try {
            ftxtUsuario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtUsuario.setToolTipText("Insira o CPF do gerente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUsuario)
                            .addComponent(lblSenha))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ptxtSenha, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(ftxtUsuario))
                        .addGap(64, 64, 64)
                        .addComponent(lblImagemGerente, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(btnConfirmar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVoltar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblAvisoAutorizacao)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltar)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblAvisoAutorizacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUsuario)
                            .addComponent(ftxtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ptxtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSenha))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addComponent(lblImagemGerente, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)))
                .addComponent(btnConfirmar)
                .addGap(29, 29, 29))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // verifica se o CPF e a senha batem com o de algum gerente cadastrado no sistema
        boolean achou = false;
        for (Funcionario funcionario : Controle.funcionarios) {
            if (funcionario instanceof Gerente) {
                if (funcionario.getCPF().equals(ftxtUsuario.getText()) && ((Gerente)funcionario).getSenha() == Integer.parseInt(String.valueOf(ptxtSenha.getPassword()))) {
                    // se o usuário e senha estiverem corretos, a ação é confirmada
                    achou = true;
                    JOptionPane.showMessageDialog(null, "Autorizado, " + funcionario.getNome() + ".", "Autenticado", JOptionPane.INFORMATION_MESSAGE);
                    this.setVisible(false);
                    if (fechar) {
                        
                        try {
                            // demora 0,7 segundo para fechar
                            new Thread().sleep(700);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(AutorizacaoGerente.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        System.exit(0);
                        
                    } else if (editarCardapio) {
                        new Cardapio().setVisible(true);
                        
                    } else if (cadastrarFuncionario) {
                        new CadastroFuncionario().setVisible(true);
                        
                    } else if (relatorioFuncionarios) {
                        new RelatorioFuncionarios().setVisible(true);
                        
                    }
                    
                } 
            }
        }
        if (!achou) {
            JOptionPane.showMessageDialog(null, "Usuário ou senha incorretos.", "Atenção", JOptionPane.WARNING_MESSAGE);
            this.ptxtSenha.setText("");
            this.ftxtUsuario.setText("");
            this.ftxtUsuario.requestFocus();        
        }
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void ptxtSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ptxtSenhaKeyPressed
        // confirma pela tecla Enter
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            // verifica se o CPF e a senha batem com o de algum gerente cadastrado no sistema
            boolean achou = false;
            for (Funcionario funcionario : Controle.funcionarios) {
                if (funcionario instanceof Gerente) {
                    if (funcionario.getCPF().equals(ftxtUsuario.getText()) && ((Gerente)funcionario).getSenha() == Integer.parseInt(String.valueOf(ptxtSenha.getPassword()))) {
                        // se o usuário e senha estiverem corretos, a ação é confirmada
                        achou = true;
                        JOptionPane.showMessageDialog(null, "Autorizado, " + funcionario.getNome() + ".", "Autenticado", JOptionPane.INFORMATION_MESSAGE);
                        this.setVisible(false);
                        if (fechar) {

                            try {
                                new Thread().sleep(700);
                            } catch (InterruptedException ex) {
                                Logger.getLogger(AutorizacaoGerente.class.getName()).log(Level.SEVERE, null, ex);
                            }
                            System.exit(0);

                        } else if (editarCardapio) {
                            new Cardapio().setVisible(true);

                        } else if (cadastrarFuncionario) {
                            new CadastroFuncionario().setVisible(true);

                        } else if (relatorioFuncionarios) {
                            new RelatorioFuncionarios().setVisible(true);

                        }

                    } 
                }
            }
            if (!achou) {
                JOptionPane.showMessageDialog(null, "Usuário ou senha incorretos.", "Atenção", JOptionPane.WARNING_MESSAGE);
                this.ptxtSenha.setText("");
                this.ftxtUsuario.setText("");
                this.ftxtUsuario.requestFocus();        
            }
        }
    }//GEN-LAST:event_ptxtSenhaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AutorizacaoGerente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AutorizacaoGerente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AutorizacaoGerente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AutorizacaoGerente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AutorizacaoGerente().setVisible(true); NÃO UTILIZADO
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField ftxtUsuario;
    private javax.swing.JLabel lblAvisoAutorizacao;
    private javax.swing.JLabel lblImagemGerente;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPasswordField ptxtSenha;
    // End of variables declaration//GEN-END:variables
}
