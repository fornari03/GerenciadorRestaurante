package telas;

import classes.Cliente;
import classes.Controle;
import classes.ManipulaArquivos;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/**
 * Classe para a tela de editar cliente
 */
public class EditarCliente extends javax.swing.JFrame {
    
    /** Atributo para armazenar o relatório de cliente para que seja possível voltar pelo btnVoltar */
    private RelatorioClientes relatorio;
    
    /** Atributo para o cliente que se está editando */
    private Cliente cliente;
    
    /** Atributo para o índice do cliente selecionado */
    private int indice; 
    
    /** Atributo para verificar se está em modo de pesquisa ou não */
    private boolean pesquisa;
    
    /**
     * Método construtor da classe
     * @param relatorio Tela de relatório em que se abriu a tela de editar cliente
     * @param cliente Cliente que será editado
     * @param indice Índice do cliente selecionado
     * @param pesquisa Modo de pesquisa ou não
     */
    public EditarCliente(RelatorioClientes relatorio, Cliente cliente, int indice, boolean pesquisa) { // ATUALIZAR CONSTRUTOR PARA RECEBER UM CLIENTE COMO ARGUMENTO
        initComponents();
        this.relatorio = relatorio;
        this.cliente = cliente;
        this.indice = indice;
        this.pesquisa = pesquisa;

        this.txtNomeCliente.setText(cliente.getNome());
        this.txtEnderecoCliente.setText(cliente.getEndereço());
        this.txtEmailCliente.setText(cliente.getEmail());
        this.ftxtCpfCliente.setText(cliente.getCPF());
        this.ftxtTelefoneCliente.setText(cliente.getTelefone());
        this.ftxtDataNascimentoCliente.setText(cliente.getAniversario().format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
    }
    
    /**
     * Método para limpar os campos da tela
     */
    private void limparFields() {
        // limpa todos os campos da tela
        this.txtNomeCliente.setText("");
        this.txtEmailCliente.setText("");
        this.txtEnderecoCliente.setText("");
        this.ftxtCpfCliente.setText("");
        this.ftxtTelefoneCliente.setText("");
        this.ftxtDataNascimentoCliente.setText("");
    }
    
    /**
     * Método para desabilitar os campos da tela
     */
    private void desabilitarFields() {
        // desabilita todos os campos da tela
        this.txtNomeCliente.setEnabled(false);
        this.txtEnderecoCliente.setEnabled(false);
        this.txtEmailCliente.setEnabled(false);
        this.ftxtCpfCliente.setEnabled(false);
        this.ftxtTelefoneCliente.setEnabled(false);
        this.ftxtDataNascimentoCliente.setEnabled(false);
        this.btnSalvar.setEnabled(false);
        this.btnExcluir.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNomeCliente = new javax.swing.JLabel();
        txtEnderecoCliente = new javax.swing.JTextField();
        lblCpfCliente = new javax.swing.JLabel();
        ftxtDataNascimentoCliente = new javax.swing.JFormattedTextField();
        lblEmailCliente = new javax.swing.JLabel();
        lblTelefoneCliente = new javax.swing.JLabel();
        lblEnderecoCliente = new javax.swing.JLabel();
        lblDataNascimentoCliente = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        ftxtCpfCliente = new javax.swing.JFormattedTextField();
        txtEmailCliente = new javax.swing.JTextField();
        lblImagemCliente = new javax.swing.JLabel();
        ftxtTelefoneCliente = new javax.swing.JFormattedTextField();
        btnSalvar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alterar informações do cliente");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/pessoa.png")).getImage());

        lblNomeCliente.setText("Nome:");

        txtEnderecoCliente.setToolTipText("Edite o endereço do cliente");

        lblCpfCliente.setText("CPF:");

        try {
            ftxtDataNascimentoCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtDataNascimentoCliente.setToolTipText("Edite a data de nascimento do cliente");

        lblEmailCliente.setText("E-mail:");

        lblTelefoneCliente.setText("Telefone:");

        lblEnderecoCliente.setText("Endereço:");

        lblDataNascimentoCliente.setText("Data de Nascimento:");

        txtNomeCliente.setToolTipText("Edite o nome do cliente");

        try {
            ftxtCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtCpfCliente.setToolTipText("Edite o CPF do cliente");

        txtEmailCliente.setToolTipText("Edite o email do cliente");

        lblImagemCliente.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblImagemCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/businessapplication_edit_male_user_thepencil_theclient_negocio_2321.png"))); // NOI18N

        try {
            ftxtTelefoneCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) 9####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtTelefoneCliente.setToolTipText("Edite o telefone do cliente");

        btnSalvar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSalvar.setText("Salvar alterações");
        btnSalvar.setToolTipText("Salve as alterações realizadas");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(204, 51, 0));
        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(255, 255, 255));
        btnExcluir.setText("Excluir cliente");
        btnExcluir.setToolTipText("Exclui o cliente definitivamente do sistema");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnVoltar.setBackground(new java.awt.Color(242, 242, 242));
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/3643764-back-backward-left-reply-turn_113415 (1).png"))); // NOI18N
        btnVoltar.setBorder(null);
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblEmailCliente)
                                    .addGap(28, 28, 28))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblEnderecoCliente)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCpfCliente)
                                .addGap(41, 41, 41)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEnderecoCliente)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnSalvar)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ftxtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTelefoneCliente)
                                            .addComponent(lblDataNascimentoCliente)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(79, 79, 79)
                                        .addComponent(btnExcluir)
                                        .addGap(0, 0, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNomeCliente)
                        .addGap(29, 29, 29)
                        .addComponent(txtNomeCliente)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ftxtDataNascimentoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                    .addComponent(ftxtTelefoneCliente))
                .addGap(62, 62, 62))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltar)
                .addGap(202, 202, 202)
                .addComponent(lblImagemCliente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(lblImagemCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVoltar)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeCliente)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnderecoCliente)
                    .addComponent(txtEnderecoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailCliente)
                    .addComponent(txtEmailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTelefoneCliente)
                    .addComponent(ftxtTelefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCpfCliente)
                    .addComponent(ftxtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDataNascimentoCliente)
                    .addComponent(ftxtDataNascimentoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnExcluir))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // fecha a tela de editar e reabre a tela de relatorio
        this.setVisible(false);
        this.relatorio.setVisible(true);
        
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // salva os novos dados do cliente em questão
        // verifica se todos os campos estão devidamente preenchidos
        if (txtNomeCliente.getText().isBlank() || txtEnderecoCliente.getText().isBlank() || txtEmailCliente.getText().isBlank() || ftxtTelefoneCliente.getText().equals("(  ) 9    -    ") || ftxtCpfCliente.getText().equals("   .   .   -  ") || ftxtDataNascimentoCliente.getText().equals("  /  /    "))
            JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!", "Atenção", JOptionPane.WARNING_MESSAGE);
        else {
            if (!this.txtEmailCliente.getText().contains("@") || !this.txtEmailCliente.getText().contains(".com"))
                JOptionPane.showMessageDialog(null, "O email digitado é inválido.", "Atenção", JOptionPane.WARNING_MESSAGE);
            else {
                // caso nenhum campo esteja em branco ou só com espaços, verifica se é possível atualizar as informações do cliente com os dados dos campos
                try {
                    cliente.setNome(this.txtNomeCliente.getText().trim());
                    cliente.setEndereço(this.txtEnderecoCliente.getText().trim());
                    cliente.setEmail(this.txtEmailCliente.getText().trim());
                    cliente.setTelefone(this.ftxtTelefoneCliente.getText().trim());
                    cliente.setCPF(this.ftxtCpfCliente.getText().trim());
                    cliente.setAniversario(LocalDate.parse(this.ftxtDataNascimentoCliente.getText().trim(), DateTimeFormatter.ofPattern("dd/MM/yyyy")));

                    // ALTERANDO O ARQUIVO DE CLIENTES
                    ManipulaArquivos.apagarTxt("Clientes.txt");
                    for (Cliente c : Controle.clientes) {
                        String dadosCliente;
                        dadosCliente = (c.getNome()+", "+ c.getCPF()+", "+ c.getEmail()+", "+c.getTelefone()+", "+c.getEndereço()+", "+ c.getAniversario().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"))+ ", "+ c.getQuantidadePedidos()+"\n");
                        ManipulaArquivos.escreverTxt("Clientes.txt", dadosCliente);
                    }

                    limparFields();
                    desabilitarFields();
                    JOptionPane.showMessageDialog(null, "Cliente editado com sucesso.", "Atualizado", JOptionPane.INFORMATION_MESSAGE);
                    // ATUALIZAR NA TELA DE RELATÓRIO
                    // ADICIONAR NO ARQUIVO DE CLIENTES

                } catch (Exception e) {
                    // se algum campo estiver com um dado de tipo diferente:
                    JOptionPane.showMessageDialog(null, "Um ou mais campos estão com dados inválidos!", "Atenção", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
            
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // exclui definitivamente o cliente em questão
        if (JOptionPane.showConfirmDialog(null, "Esta ação é irreversível. Deseja realmente fazê-la?") == 0) {
            JOptionPane.showMessageDialog(null, "Cliente excluído com sucesso.", "Excluído", JOptionPane.INFORMATION_MESSAGE);
            if (pesquisa)
                this.relatorio.getModelo_pesquisa().remove(this.indice);
            else
                this.relatorio.getModelo().remove(this.indice);
            Controle.clientes.remove(cliente);
            
            // ALTERANDO O ARQUIVO DE CLIENTES
            ManipulaArquivos.apagarTxt("Clientes.txt");
            for (Cliente c : Controle.clientes) {
                String dadosCliente;
                dadosCliente = (c.getNome()+", "+ c.getCPF()+", "+ c.getEmail()+", "+c.getTelefone()+", "+c.getEndereço()+", "+ c.getAniversario().format(DateTimeFormatter.ofPattern("dd/MM/yyyy"))+ ", "+ c.getQuantidadePedidos()+"\n");
                ManipulaArquivos.escreverTxt("Clientes.txt", dadosCliente);
                }
            
            limparFields();
            desabilitarFields();
            
            // ATUALIZAR NA TELA DE RELATÓRIO
            // REMOVER DO ARQUIVO DE CLIENTES
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new EditarCliente().setVisible(true); NÃO É UTILIZADO
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField ftxtCpfCliente;
    private javax.swing.JFormattedTextField ftxtDataNascimentoCliente;
    private javax.swing.JFormattedTextField ftxtTelefoneCliente;
    private javax.swing.JLabel lblCpfCliente;
    private javax.swing.JLabel lblDataNascimentoCliente;
    private javax.swing.JLabel lblEmailCliente;
    private javax.swing.JLabel lblEnderecoCliente;
    private javax.swing.JLabel lblImagemCliente;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblTelefoneCliente;
    private javax.swing.JTextField txtEmailCliente;
    private javax.swing.JTextField txtEnderecoCliente;
    private javax.swing.JTextField txtNomeCliente;
    // End of variables declaration//GEN-END:variables
}
