package telas;

import classes.CardapioTableModel;
import classes.Controle;
import classes.ManipulaArquivos;
import classes.Produto;
import javax.swing.JOptionPane;


/**
 * Classe para a tela de cardápio
 */
public class Cardapio extends javax.swing.JFrame {

    /** Atributo para armazenar um CardapioTableModel */
    private CardapioTableModel modelo;
            
    /**
     * Método construtor da classe
     */
    public Cardapio() {
        initComponents();
        this.modelo = new CardapioTableModel();
        this.tblCardapioItems.setModel(modelo);
        this.btnEditar.setEnabled(false);
        this.btnExcluir.setEnabled(false);
    }

    /**
     * Método para limpar os campos da tela
     */
    private void limparFields() {
        this.txtNomePrato.setText("");
        this.txtPreçoPrato.setText("");
    }
    
    /**
     * Método para desbilitar os campos da tela
     */
    private void desabilitarFields() {
        this.txtNomePrato.setEnabled(false);
        this.txtPreçoPrato.setEnabled(false);
    }
    
    /**
     * Método para restaurar os campos para a maneira inicial da tela
     */
    private void restaurarDefault() {
        limparFields();
        this.btnAdicionar.setEnabled(true);
        this.btnEditar.setEnabled(false);
        this.btnExcluir.setEnabled(false);
        this.txtNomePrato.setEnabled(true);
        this.txtPreçoPrato.setEnabled(true);
        this.tblCardapioItems.clearSelection();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGrupoFuncionalidade = new javax.swing.ButtonGroup();
        pnlCardapio = new javax.swing.JPanel();
        scrSelecionarItemCardapio = new javax.swing.JScrollPane();
        tblCardapioItems = new javax.swing.JTable();
        btnVoltar = new javax.swing.JButton();
        lblSelecioneItem = new javax.swing.JLabel();
        lblSelecionarFuncao = new javax.swing.JLabel();
        lblNomePrato = new javax.swing.JLabel();
        lblPreçoPrato = new javax.swing.JLabel();
        txtNomePrato = new javax.swing.JTextField();
        txtPreçoPrato = new javax.swing.JTextField();
        btnAdicionar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cardapio");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/hamburguer comida.png")).getImage());

        pnlCardapio.setBorder(javax.swing.BorderFactory.createTitledBorder("Cardápio"));

        scrSelecionarItemCardapio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scrSelecionarItemCardapioMouseClicked(evt);
            }
        });

        tblCardapioItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Prato", "Preço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCardapioItems.getTableHeader().setReorderingAllowed(false);
        tblCardapioItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCardapioItemsMouseClicked(evt);
            }
        });
        scrSelecionarItemCardapio.setViewportView(tblCardapioItems);
        if (tblCardapioItems.getColumnModel().getColumnCount() > 0) {
            tblCardapioItems.getColumnModel().getColumn(0).setPreferredWidth(10);
            tblCardapioItems.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        javax.swing.GroupLayout pnlCardapioLayout = new javax.swing.GroupLayout(pnlCardapio);
        pnlCardapio.setLayout(pnlCardapioLayout);
        pnlCardapioLayout.setHorizontalGroup(
            pnlCardapioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrSelecionarItemCardapio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)
        );
        pnlCardapioLayout.setVerticalGroup(
            pnlCardapioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCardapioLayout.createSequentialGroup()
                .addComponent(scrSelecionarItemCardapio, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btnVoltar.setBackground(new java.awt.Color(242, 242, 242));
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/3643764-back-backward-left-reply-turn_113415 (1).png"))); // NOI18N
        btnVoltar.setBorder(null);
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        lblSelecioneItem.setText("Selecione o item que deseja modificar no cardápio");

        lblSelecionarFuncao.setText("Selecione a funcionalidade desejada:");

        lblNomePrato.setText("Nome do prato:");

        lblPreçoPrato.setText("Preço do prato:");

        txtNomePrato.setToolTipText("");

        btnAdicionar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.setToolTipText("Adicione um prato novo ao cardápio");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setToolTipText("Edite um prato já existente no cardápio");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setToolTipText("Exclua definitivamente um prato do cardápio");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlCardapio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnVoltar)
                                .addGap(18, 18, 18)
                                .addComponent(lblSelecioneItem, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 228, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(lblPreçoPrato))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(lblNomePrato, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPreçoPrato, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNomePrato, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(lblSelecionarFuncao)
                                .addGap(28, 28, 28)
                                .addComponent(btnAdicionar)
                                .addGap(29, 29, 29)
                                .addComponent(btnEditar)
                                .addGap(36, 36, 36)
                                .addComponent(btnExcluir)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVoltar)
                    .addComponent(lblSelecioneItem, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCardapio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelecionarFuncao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomePrato)
                    .addComponent(txtNomePrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPreçoPrato)
                    .addComponent(txtPreçoPrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // fecha a tela de editar cardapio 
        this.setVisible(false);
    }//GEN-LAST:event_btnVoltarActionPerformed
    private void scrSelecionarItemCardapioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scrSelecionarItemCardapioMouseClicked

    }//GEN-LAST:event_scrSelecionarItemCardapioMouseClicked

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // edita o prato de acordo com o nome e preço escritos nos respectivos fields
        try {
            this.modelo.getProduto(this.tblCardapioItems.getSelectedRow()).setNome(this.txtNomePrato.getText());
            this.modelo.getProduto(this.tblCardapioItems.getSelectedRow()).setValor(Double.parseDouble(this.txtPreçoPrato.getText()));
            restaurarDefault();
            JOptionPane.showMessageDialog(null, "Prato editado com sucesso", "Editado", JOptionPane.INFORMATION_MESSAGE); 
            
            // ALTERANDO O ARQUIVO DO CARDÁPIO
            ManipulaArquivos.apagarTxt("Cardapio.txt");
            for (Produto p : Controle.cardapio) {
                String dadosProduto;
                dadosProduto = (p.getCodigo()+", "+ p.getNome()+", "+ p.getValor()+"\n");
                ManipulaArquivos.escreverTxt("Cardapio.txt", dadosProduto);
            }            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Um ou mais campos estão com dados inválidos!", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tblCardapioItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCardapioItemsMouseClicked
        // quando clica em um item do cardápio, escreve os itens nos campos
        this.txtNomePrato.setText(this.modelo.getProduto(this.tblCardapioItems.getSelectedRow()).getNome());
        this.txtPreçoPrato.setText(String.valueOf(this.modelo.getProduto(this.tblCardapioItems.getSelectedRow()).getValor()));     
        this.btnAdicionar.setEnabled(false);
        this.btnEditar.setEnabled(true);
        this.btnExcluir.setEnabled(true);
    }//GEN-LAST:event_tblCardapioItemsMouseClicked

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // adiciona o prato de acordo com o nome e preço escritos nos respectivos fields
        if (this.txtNomePrato.getText().isBlank() || this.txtPreçoPrato.getText().isBlank())
            JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!", "Atenção", JOptionPane.WARNING_MESSAGE);
        else {
            try {
                Produto produto = new Produto(Controle.addIdNumCount(), this.txtNomePrato.getText(), Double.parseDouble(this.txtPreçoPrato.getText()));
                this.modelo.addProduto(produto);
                restaurarDefault();
                JOptionPane.showMessageDialog(null, "Prato adicionado com sucesso", "Adicionado", JOptionPane.INFORMATION_MESSAGE); 

                // ADICIONANDO NO ARQUIVO DO CARDÁPIO
                String dadosProduto;
                dadosProduto = (produto.getCodigo()+", "+ produto.getNome()+", "+ produto.getValor()+"\n");
                ManipulaArquivos.escreverTxt("Cardapio.txt", dadosProduto);
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Um ou mais campos estão com dados inválidos!", "Atenção", JOptionPane.WARNING_MESSAGE);
            }    
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // exclui o prato selecionado
        this.modelo.remove(this.tblCardapioItems.getSelectedRow());
        restaurarDefault();
        JOptionPane.showMessageDialog(null, "Prato editado com sucesso", "Editado", JOptionPane.INFORMATION_MESSAGE); 
        
        // ALTERANDO O ARQUIVO DO CARDÁPIO
        ManipulaArquivos.apagarTxt("Cardapio.txt");
        for (Produto p : Controle.cardapio) {
            String dadosProduto;
            dadosProduto = (p.getCodigo()+", "+ p.getNome()+", "+ p.getValor()+"\n");
            ManipulaArquivos.escreverTxt("Cardapio.txt", dadosProduto);
        }  
    }//GEN-LAST:event_btnExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cardapio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cardapio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cardapio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cardapio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cardapio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.ButtonGroup btnGrupoFuncionalidade;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel lblNomePrato;
    private javax.swing.JLabel lblPreçoPrato;
    private javax.swing.JLabel lblSelecionarFuncao;
    private javax.swing.JLabel lblSelecioneItem;
    private javax.swing.JPanel pnlCardapio;
    private javax.swing.JScrollPane scrSelecionarItemCardapio;
    private javax.swing.JTable tblCardapioItems;
    private javax.swing.JTextField txtNomePrato;
    private javax.swing.JTextField txtPreçoPrato;
    // End of variables declaration//GEN-END:variables
}
