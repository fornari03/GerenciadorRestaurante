package telas;

import classes.CardapioTableModel;
import classes.Cliente;
import classes.Comanda;
import classes.ComandaTableModel;
import classes.Controle;
import classes.ItemPedido;
import classes.Produto;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 * Classe para a tela de editar pedido
 */
public class EditarPedido extends javax.swing.JFrame {

    /** Atributo para armazenar um CardapioTableModel */
    private CardapioTableModel modeloCardapio;
    
    /** Atributo para armazenar um ComandaTableModel */
    private ComandaTableModel modeloComanda;
    
    /** Atributo para a comanda que será editada */
    private Comanda comanda;
    
    /** Atributo para armazenar a tela de de pedidos para que seja possível voltar pelo btnVoltar */
    private RelatorioPedidos relatorio;
    
    /**
     * Creates new form EditarPedido
     */
    
    /**
     * Método construtor da classe, para quando se instancia a partir do botão de comanda na TelaMesas
     * @param comanda Comanda que será editada
     */
    public EditarPedido(Comanda comanda) {
        initComponents();
        this.comanda = comanda;
        this.modeloCardapio = new CardapioTableModel();
        this.modeloComanda = new ComandaTableModel();
        this.modeloComanda.addLista(this.comanda.getItens());
        this.tblCardapioItems.setModel(modeloCardapio);
        this.tblComandaMesa.setModel(modeloComanda);
        if (this.comanda.getCliente() != null)
            this.ftxtCpfCliente.setText(this.comanda.getCliente().getCPF());
    }
    
    /**
     * Método construtor da classe, para quando se instancia a partir do RelatorioPedidos
     * @param comanda Comanda que será editada
     * @param relatorio Tela de relatório em que se abriu a tela de editar pedido
     */
    public EditarPedido(Comanda comanda, RelatorioPedidos relatorio) {
        initComponents();
        this.relatorio = relatorio;
        this.comanda = comanda;
        this.modeloCardapio = new CardapioTableModel();
        this.modeloComanda = new ComandaTableModel();
        this.modeloComanda.addLista(this.comanda.getItens());
        this.tblCardapioItems.setModel(modeloCardapio);
        this.tblComandaMesa.setModel(modeloComanda);
        if (this.comanda.getCliente() != null)
            this.ftxtCpfCliente.setText(this.comanda.getCliente().getCPF());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSelecioneItem = new javax.swing.JLabel();
        lblQuantidade = new javax.swing.JLabel();
        spnQuantidade = new javax.swing.JSpinner();
        pnlComanda = new javax.swing.JPanel();
        scrComandaMesa = new javax.swing.JScrollPane();
        tblComandaMesa = new javax.swing.JTable();
        btnSalvar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        lblCpfCliente = new javax.swing.JLabel();
        ftxtCpfCliente = new javax.swing.JFormattedTextField();
        btnFecharComanda = new javax.swing.JButton();
        btnImagemPesquisar = new javax.swing.JButton();
        txtPesquisar = new javax.swing.JTextField();
        btnVoltar = new javax.swing.JButton();
        pnlCardapio = new javax.swing.JPanel();
        scrSelecionarItemCardapio = new javax.swing.JScrollPane();
        tblCardapioItems = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar Pedido");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/comida delivery.png")).getImage());

        lblSelecioneItem.setText("Selecione o item que deseja adicionar a comanda");

        lblQuantidade.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblQuantidade.setText("Quantidade: ");

        spnQuantidade.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        pnlComanda.setBorder(javax.swing.BorderFactory.createTitledBorder("Comanda"));

        tblComandaMesa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prato", "Quantidade", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrComandaMesa.setViewportView(tblComandaMesa);

        btnSalvar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setToolTipText("Salve as alterações");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnRemover.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.setToolTipText("Remova da comanda o item selecionado");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        lblCpfCliente.setText("CPF do cliente:");

        try {
            ftxtCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtCpfCliente.setToolTipText("Insira o CPF do cliente");

        btnFecharComanda.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnFecharComanda.setText("Fechar Comanda");
        btnFecharComanda.setToolTipText("Finalize o pedido");
        btnFecharComanda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharComandaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlComandaLayout = new javax.swing.GroupLayout(pnlComanda);
        pnlComanda.setLayout(pnlComandaLayout);
        pnlComandaLayout.setHorizontalGroup(
            pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComandaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlComandaLayout.createSequentialGroup()
                        .addComponent(scrComandaMesa)
                        .addContainerGap())
                    .addGroup(pnlComandaLayout.createSequentialGroup()
                        .addComponent(btnRemover)
                        .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlComandaLayout.createSequentialGroup()
                                .addGap(181, 181, 181)
                                .addComponent(btnSalvar)
                                .addGap(170, 170, 170)
                                .addComponent(lblCpfCliente))
                            .addGroup(pnlComandaLayout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(btnFecharComanda)
                                .addGap(171, 171, 171)
                                .addComponent(ftxtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlComandaLayout.setVerticalGroup(
            pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComandaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrComandaMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemover, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(lblCpfCliente)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ftxtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFecharComanda, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnImagemPesquisar.setBackground(new java.awt.Color(242, 242, 242));
        btnImagemPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/magnifier-1_icon-icons.com_56924 (1).png"))); // NOI18N
        btnImagemPesquisar.setToolTipText("Pesquisar");
        btnImagemPesquisar.setBorder(null);
        btnImagemPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagemPesquisarActionPerformed(evt);
            }
        });

        txtPesquisar.setToolTipText("Pesquise pelo ID único do produto");
        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyPressed(evt);
            }
        });

        btnVoltar.setBackground(new java.awt.Color(242, 242, 242));
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/3643764-back-backward-left-reply-turn_113415 (1).png"))); // NOI18N
        btnVoltar.setBorder(null);
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        pnlCardapio.setBorder(javax.swing.BorderFactory.createTitledBorder("Cardápio"));

        tblCardapioItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Prato", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrSelecionarItemCardapio.setViewportView(tblCardapioItems);

        javax.swing.GroupLayout pnlCardapioLayout = new javax.swing.GroupLayout(pnlCardapio);
        pnlCardapio.setLayout(pnlCardapioLayout);
        pnlCardapioLayout.setHorizontalGroup(
            pnlCardapioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrSelecionarItemCardapio, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        pnlCardapioLayout.setVerticalGroup(
            pnlCardapioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrSelecionarItemCardapio, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
        );

        btnAdicionar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.setToolTipText("Adicione o produto selecionado na comanda");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCardapio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(lblSelecioneItem, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPesquisar)
                .addGap(18, 18, 18)
                .addComponent(btnImagemPesquisar)
                .addGap(70, 70, 70))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlComanda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lblQuantidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAdicionar)
                        .addGap(353, 353, 353)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSelecioneItem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnImagemPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCardapio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuantidade, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spnQuantidade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlComanda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // edita comanda com as informações da tela
        if (this.modeloComanda.isEmpty())
        // se a comanda estiver vazia, não é instanciada
        JOptionPane.showMessageDialog(null, "A comanda está vazia!", "Atenção", JOptionPane.WARNING_MESSAGE);
        else {
            try {
                if (!this.ftxtCpfCliente.getText().equals("   .   .   -  ")) {
                    for (Cliente c : Controle.clientes) {
                        if (c.getCPF().equals(this.ftxtCpfCliente.getText())) {
                            comanda.setCliente(c);
                            break;
                        }
                    }
                    if (comanda.getCliente() == null) {
                        comanda.getCliente().getNome(); // apenas para gerar erro
                    }
                }
                
                Produto brinde = new Produto(0, "FREEBrownie", 0);
                boolean presente = false;
                for (ItemPedido itemComanda : comanda.getItens()) {
                    if (itemComanda.getProduto().getCodigo() == brinde.getCodigo())
                        // se o código for o mesmo, quer dizer que o brownie já está na comanda
                        presente = true;
                }
                
                this.comanda.setItens(new ArrayList());
                
                if (!presente) {
                    // se o brownie ainda não tiver sido adicionado, adiciona-se agora
                    if (comanda.getCliente()!= null && comanda.getCliente().ganharBrinde()) {
                        this.modeloComanda.addItemPedido(comanda.addBrinde());
                        JOptionPane.showMessageDialog(null, "Cliente aniversariante! Foi adicionado um brownie na comanda!", "Aniversariante", JOptionPane.PLAIN_MESSAGE);
                    }
                }
                
                for (int i=0; i<modeloComanda.getRowCount(); i++) 
                    comanda.getItens().add(modeloComanda.getItemPedido(i));
                
                JOptionPane.showMessageDialog(null, "Comanda editada com sucesso.", "Editada", JOptionPane.INFORMATION_MESSAGE);
                this.setVisible(false);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Não foi encontrado um cliente cadastrado com o CPF digitado.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            }

        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // remove o item selecionado da comanda
        try {
            this.modeloComanda.remove(this.tblComandaMesa.getSelectedRow());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um item para remover.", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnImagemPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagemPesquisarActionPerformed
        // quando clicado, faz a pesquisa do ID digitado
        boolean achou = false;
        for (int i=0; i<modeloCardapio.getRowCount(); i++) {
            if (String.valueOf(this.modeloCardapio.getValueAt(i, 0)).equals(this.txtPesquisar.getText().trim())) {
                achou = true;
                this.tblCardapioItems.setRowSelectionInterval(i, i);
            }
        }
        if (!achou)
        JOptionPane.showMessageDialog(null, "Não foi encontrado um produto o ID digitado.", "Atenção", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnImagemPesquisarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // fecha a tela do Novo Pedido
        this.setVisible(false);
        if (this.relatorio != null)
            // caso o EditarPedido tenha sido instanciado a partir do RelatorioPedidos, volta para a tela do relatório
            this.relatorio.setVisible(true);
        
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // adiciona o prato selecionado, de acordo com a quantidade, na comanda
        try {
            Produto produto = this.modeloCardapio.getProduto(this.tblCardapioItems.getSelectedRow());
            ItemPedido item = new ItemPedido(produto, Integer.parseInt(this.spnQuantidade.getValue().toString()));
            this.modeloComanda.addItemPedido(item);
            this.spnQuantidade.setValue(1);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um prato para adicionar.", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnFecharComandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharComandaActionPerformed
        // abre a tela de fechar comanda
        this.setVisible(false);
        new FecharComanda(this.comanda).setVisible(true);
    }//GEN-LAST:event_btnFecharComandaActionPerformed

    private void txtPesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyPressed
        // pesquisar pela tecla Enter
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            // quando clicado, faz a pesquisa do ID digitado
            boolean achou = false;
            for (int i=0; i<modeloCardapio.getRowCount(); i++) {
                if (String.valueOf(this.modeloCardapio.getValueAt(i, 0)).equals(this.txtPesquisar.getText().trim())) {
                    achou = true;
                    this.tblCardapioItems.setRowSelectionInterval(i, i);
                }
            }
            if (!achou)
            JOptionPane.showMessageDialog(null, "Não foi encontrado um produto o ID digitado.", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtPesquisarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new EditarPedido().setVisible(true); NÃO É UTILIZADO
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnFecharComanda;
    private javax.swing.JButton btnImagemPesquisar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JFormattedTextField ftxtCpfCliente;
    private javax.swing.JLabel lblCpfCliente;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblSelecioneItem;
    private javax.swing.JPanel pnlCardapio;
    private javax.swing.JPanel pnlComanda;
    private javax.swing.JScrollPane scrComandaMesa;
    private javax.swing.JScrollPane scrSelecionarItemCardapio;
    private javax.swing.JSpinner spnQuantidade;
    private javax.swing.JTable tblCardapioItems;
    private javax.swing.JTable tblComandaMesa;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables
}
