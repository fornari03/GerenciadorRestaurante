package telas;

import classes.CardapioTableModel;
import classes.Cliente;
import classes.Comanda;
import classes.ComandaTableModel;
import classes.Controle;
import classes.Entregador;
import classes.Funcionario;
import classes.ItemPedido;
import classes.Produto;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 * Classe para a tela de novo pedido delivery
 */
public class NovoDelivery extends javax.swing.JFrame {

    /** Atributo para armazenar um CardapioTableModel */
    private CardapioTableModel modeloCardapio;
    
    /** Atributo para armazenar um ComandaTableModel */
    private ComandaTableModel modeloComanda;
    
    /**
     * Creates new form NovoDelivery
     */
    
    /**
     * Método construtor da classe
     */
    public NovoDelivery() {
        initComponents();
        this.modeloCardapio = new CardapioTableModel();
        this.modeloComanda = new ComandaTableModel();
        this.tblCardapioItems.setModel(modeloCardapio);
        this.tblComandaMesa.setModel(modeloComanda);
        carregarEntregadores();
    }
    
    /**
     * Método para carregar a combobox dos entregadores
     */
    private void carregarEntregadores() {
        cmbEntregador.removeAllItems();
        this.cmbEntregador.addItem("Selecione");
        for (Funcionario func : Controle.funcionarios) {
            if (func instanceof Entregador)
                this.cmbEntregador.addItem(func.getNome());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnVoltar = new javax.swing.JButton();
        lblSelecioneItem = new javax.swing.JLabel();
        pnlCardapio = new javax.swing.JPanel();
        scrSelecionarItemCardapio = new javax.swing.JScrollPane();
        tblCardapioItems = new javax.swing.JTable();
        btnAdicionar = new javax.swing.JButton();
        lblQuantidade = new javax.swing.JLabel();
        spnQuantidade = new javax.swing.JSpinner();
        pnlComanda = new javax.swing.JPanel();
        scrComandaMesa = new javax.swing.JScrollPane();
        tblComandaMesa = new javax.swing.JTable();
        btnLnçar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        lblEntregador = new javax.swing.JLabel();
        cmbEntregador = new javax.swing.JComboBox<>();
        lblCpfCliente = new javax.swing.JLabel();
        ftxtCpfCliente = new javax.swing.JFormattedTextField();
        txtPesquisar = new javax.swing.JTextField();
        btnImagemPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Comanda do delivery");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/comida delivery.png")).getImage());

        btnVoltar.setBackground(new java.awt.Color(242, 242, 242));
        btnVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/3643764-back-backward-left-reply-turn_113415 (1).png"))); // NOI18N
        btnVoltar.setBorder(null);
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        lblSelecioneItem.setText("Selecione o item que deseja adicionar a comanda");

        pnlCardapio.setBorder(javax.swing.BorderFactory.createTitledBorder("Cardápio"));

        tblCardapioItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Prato", "Preço"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCardapioItems.getTableHeader().setReorderingAllowed(false);
        scrSelecionarItemCardapio.setViewportView(tblCardapioItems);
        if (tblCardapioItems.getColumnModel().getColumnCount() > 0) {
            tblCardapioItems.getColumnModel().getColumn(0).setMaxWidth(80);
            tblCardapioItems.getColumnModel().getColumn(2).setMinWidth(150);
            tblCardapioItems.getColumnModel().getColumn(2).setMaxWidth(200);
        }

        javax.swing.GroupLayout pnlCardapioLayout = new javax.swing.GroupLayout(pnlCardapio);
        pnlCardapio.setLayout(pnlCardapioLayout);
        pnlCardapioLayout.setHorizontalGroup(
            pnlCardapioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrSelecionarItemCardapio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
        );
        pnlCardapioLayout.setVerticalGroup(
            pnlCardapioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrSelecionarItemCardapio, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
        );

        btnAdicionar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnAdicionar.setText("Adicionar");
        btnAdicionar.setToolTipText("Adicione o produto selecionado na comanda");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        lblQuantidade.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblQuantidade.setText("Quantidade: ");

        spnQuantidade.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        pnlComanda.setBorder(javax.swing.BorderFactory.createTitledBorder("Comanda"));

        tblComandaMesa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Prato", "Quantidade", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblComandaMesa.getTableHeader().setReorderingAllowed(false);
        scrComandaMesa.setViewportView(tblComandaMesa);
        if (tblComandaMesa.getColumnModel().getColumnCount() > 0) {
            tblComandaMesa.getColumnModel().getColumn(0).setResizable(false);
            tblComandaMesa.getColumnModel().getColumn(0).setPreferredWidth(320);
            tblComandaMesa.getColumnModel().getColumn(1).setResizable(false);
            tblComandaMesa.getColumnModel().getColumn(1).setPreferredWidth(30);
            tblComandaMesa.getColumnModel().getColumn(2).setResizable(false);
        }

        btnLnçar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnLnçar.setText("Lançar");
        btnLnçar.setToolTipText("Lance a comanda no sistema");
        btnLnçar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLnçarActionPerformed(evt);
            }
        });

        btnRemover.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnRemover.setText("Remover");
        btnRemover.setToolTipText("Remova da comanda o item selecionado");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        lblEntregador.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblEntregador.setText("Entregador:");

        cmbEntregador.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cmbEntregador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", " " }));

        javax.swing.GroupLayout pnlComandaLayout = new javax.swing.GroupLayout(pnlComanda);
        pnlComanda.setLayout(pnlComandaLayout);
        pnlComandaLayout.setHorizontalGroup(
            pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComandaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrComandaMesa, javax.swing.GroupLayout.DEFAULT_SIZE, 665, Short.MAX_VALUE)
                    .addGroup(pnlComandaLayout.createSequentialGroup()
                        .addComponent(btnRemover)
                        .addGap(60, 60, 60)
                        .addComponent(lblEntregador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbEntregador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(pnlComandaLayout.createSequentialGroup()
                .addGap(272, 272, 272)
                .addComponent(btnLnçar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlComandaLayout.setVerticalGroup(
            pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlComandaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrComandaMesa, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlComandaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEntregador)
                        .addComponent(cmbEntregador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRemover))
                .addGap(12, 12, 12)
                .addComponent(btnLnçar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblCpfCliente.setText("CPF do cliente:");

        try {
            ftxtCpfCliente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        ftxtCpfCliente.setToolTipText("Insira o CPF do cliente");

        txtPesquisar.setToolTipText("Pesquise pelo ID único do produto");
        txtPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisarKeyPressed(evt);
            }
        });

        btnImagemPesquisar.setBackground(new java.awt.Color(242, 242, 242));
        btnImagemPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/magnifier-1_icon-icons.com_56924 (1).png"))); // NOI18N
        btnImagemPesquisar.setToolTipText("Pesquisar");
        btnImagemPesquisar.setBorder(null);
        btnImagemPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImagemPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(lblSelecioneItem, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblQuantidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(btnAdicionar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVoltar)))
                .addGap(18, 18, 18)
                .addComponent(btnImagemPesquisar)
                .addGap(74, 74, 74))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblCpfCliente)
                        .addGap(85, 85, 85))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ftxtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(pnlCardapio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(pnlComanda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(3, 3, 3)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSelecioneItem, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnImagemPesquisar))
                .addGap(258, 258, 258)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantidade)
                    .addComponent(spnQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 279, Short.MAX_VALUE)
                .addComponent(lblCpfCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ftxtCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(77, 77, 77)
                    .addComponent(pnlCardapio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(398, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(406, Short.MAX_VALUE)
                    .addComponent(pnlComanda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // fecha a tela do Novo Delivery
        
        this.setVisible(false);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        // adiciona o prato selecionado, de acordo com a quantidade, na comanda
        try {
            Produto produto = this.modeloCardapio.getProduto(this.tblCardapioItems.getSelectedRow());
            ItemPedido item = new ItemPedido(produto, Integer.parseInt(this.spnQuantidade.getValue().toString()));
            this.modeloComanda.addItemPedido(item);
            this.spnQuantidade.setValue(1);
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um prato para adicionar.", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // remove o item selecionado da comanda
        try {
            this.modeloComanda.remove(this.tblComandaMesa.getSelectedRow());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione um item para remover.", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void btnImagemPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImagemPesquisarActionPerformed
        // quando clicado, faz a pesquisa do ID digitado
        boolean achou = false;
        for (int i=0; i<modeloCardapio.getRowCount(); i++) {
            if (String.valueOf(this.modeloCardapio.getValueAt(i, 0)).equals(this.txtPesquisar.getText().trim())) {
                achou = true;
                this.tblCardapioItems.setRowSelectionInterval(i, i);
            }
        }
        if (!achou)
            JOptionPane.showMessageDialog(null, "Não foi encontrado um produto com o ID digitado.", "Atenção", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnImagemPesquisarActionPerformed

    private void btnLnçarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLnçarActionPerformed

        // cria uma nova comanda com as informações da tela
        if (this.modeloComanda.isEmpty())
            // se a comanda estiver vazia, não é instanciada
            JOptionPane.showMessageDialog(null, "A comanda está vazia!", "Atenção", JOptionPane.WARNING_MESSAGE);
        else {
            if (this.cmbEntregador.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "O entregador não foi selecionado!", "Atenção", JOptionPane.WARNING_MESSAGE);
            } else {
                boolean erro_cliente = false;
                try {
                    Comanda comanda = new Comanda();
                    if (!this.ftxtCpfCliente.getText().equals("   .   .   -  ")) {
                        for (Cliente c : Controle.clientes) {
                            if (c.getCPF().equals(this.ftxtCpfCliente.getText())) {
                                comanda.setCliente(c);
                                break;
                            }
                        }
                        if (comanda.getCliente() == null) {
                            erro_cliente = true;
                            comanda.getCliente().getNome(); // apenas para gerar erro
                        }
                        
                        if (comanda.getCliente().ganharBrinde()) {
                            this.modeloComanda.addItemPedido(comanda.addBrinde());
                            JOptionPane.showMessageDialog(null, "Cliente aniversariante! Foi adicionado um brownie na comanda!", "Aniversariante", JOptionPane.PLAIN_MESSAGE);
                        }
                    }
                    
                    for (int i=0; i<modeloComanda.getRowCount(); i++)
                        comanda.getItens().add(modeloComanda.getItemPedido(i));

                    for (Funcionario func : Controle.funcionarios) {
                        if (func instanceof Entregador && func.getNome().equals(this.cmbEntregador.getSelectedItem()))
                            comanda.setEntregador((Entregador) func);
                    }

                    Controle.comandas.add(comanda);

                    JOptionPane.showMessageDialog(null, "Comanda lançada com sucesso.", "Lançada", JOptionPane.INFORMATION_MESSAGE);
                    this.setVisible(false);

                } catch (Exception e) {
                    if (!erro_cliente)
                        JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!", "Atenção", JOptionPane.WARNING_MESSAGE);
                    else
                        JOptionPane.showMessageDialog(null, "Não foi encontrado um cliente cadastrado com o CPF digitado.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
                }
        
            }
        }
    }//GEN-LAST:event_btnLnçarActionPerformed

    private void txtPesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarKeyPressed
        // pesquisa pela tecla Enter
        if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            // quando clicado, faz a pesquisa do ID digitado
            boolean achou = false;
            for (int i=0; i<modeloCardapio.getRowCount(); i++) {
                if (String.valueOf(this.modeloCardapio.getValueAt(i, 0)).equals(this.txtPesquisar.getText().trim())) {
                    achou = true;
                    this.tblCardapioItems.setRowSelectionInterval(i, i);
                }
            }
            if (!achou)
                JOptionPane.showMessageDialog(null, "Não foi encontrado um produto com o ID digitado.", "Atenção", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtPesquisarKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NovoDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NovoDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NovoDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NovoDelivery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NovoDelivery().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnImagemPesquisar;
    private javax.swing.JButton btnLnçar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<String> cmbEntregador;
    private javax.swing.JFormattedTextField ftxtCpfCliente;
    private javax.swing.JLabel lblCpfCliente;
    private javax.swing.JLabel lblEntregador;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblSelecioneItem;
    private javax.swing.JPanel pnlCardapio;
    private javax.swing.JPanel pnlComanda;
    private javax.swing.JScrollPane scrComandaMesa;
    private javax.swing.JScrollPane scrSelecionarItemCardapio;
    private javax.swing.JSpinner spnQuantidade;
    private javax.swing.JTable tblCardapioItems;
    private javax.swing.JTable tblComandaMesa;
    private javax.swing.JTextField txtPesquisar;
    // End of variables declaration//GEN-END:variables
}
